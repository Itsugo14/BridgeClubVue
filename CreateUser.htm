<!DOCTYPE html>
<html lang="en">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta charset="UTF-8">
        <title>Opret bruger</title>
        <style>
            body {
            display: inline-block;
            padding: 10px;
            font-size: x-large;
            background-color: lightgreen;
            }
        </style>
    </head>
        <body>  
            <h1>Dansk Bridgeforbund</h1>
            <h4>Opret Bruger</h4>
            <form>
                <p>Email: <input type ="email" required v-model="Email"></p>
                <p>Adgangskode: <input type ="password" required v-model="Password"></p>
                <p>Bekræft adgangskode: <input type ="password" required v-model="ConfirmPassword"></p>
                <p>Fornavn: <input type ="text" required v-model="FirstName"></p>
                <p>Efternavn: <input type ="text" required v-model="SurName"></p>
                <p>Adresse: <input type ="text" required v-model="Address1"></p>
                <p>Anden adresse: <input type ="text" v-model="Address2"></p>
                <p>Land: <input type ="text" required v-model="Country"></p>
                <p>Postnummer: <input type ="text" required v-model="PostCode"></p>
                <p>Telefon nummer: <input type ="tel" required v-model="Phone"></p>
                <p>Fødselsdato: <input type ="date" required v-model="DateOfBirth"></p>
                <button type="submit">Opret bruger</button>
            </form>
            <div>
            <a href="C:\GitHub\BridgeProjekt\BridgeClubVue\Login.htm">Er du allerede bruger?</a>
            </div>

            <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>

            <script>
                const baseUrl = "https://bridgeclubapi-bvhue4gpaahmdjbs.northeurope-01.azurewebsites.net/api/MembersDb";
                Vue.createApp({
                    data() {
                        return {
                            firstName: "",
                            surName: "",
                            address1: "",
                            address2: "",
                            postCode: "",
                            phoneNumber: "",
                            email: "",
                            password: "",
                            confirmPassword: "",
                            dateOfBirth: "",
                            junior: false,
                            newsletter: false,
                            error: "",
                            success: ""
                        }
                    },
                    methods: {
                        async addUser(e) {
                            if (e) e.preventDefault();
                            this.error = "";
                            this.success = "";
                            if (this.password !== this.confirmPassword) {
                                this.error = "Adgangskoderne matcher ikke.";
                                return;
                            }
                            // Basic validation
                            if (!this.email || !this.password || !this.firstName || !this.surName) {
                                this.error = "Udfyld alle obligatoriske felter.";
                                return;
                            }
                            const newUser = {
                                firstName: this.firstName,
                                surName: this.surName,
                                email: this.email,
                                phoneNumber: this.phoneNumber,
                                address1: this.address1,
                                address2: this.address2,
                                postCode: this.postCode,
                                dateOfBirth: this.dateOfBirth,
                                junior: this.junior,
                                newsletter: this.newsletter,
                                password: this.password
                            };
                            try {
                                const response = await fetch(baseUrl, {
                                    method: "POST",
                                    headers: { "Content-Type": "application/json" },
                                    body: JSON.stringify(newUser)
                                });
                                if (!response.ok) throw new Error("API fejl: " + response.status);
                                this.success = "Bruger oprettet!";
                            } catch (err) {
                                this.error = err.message;
                            }
                        }
                    }
                }).mount("#app")
                
            </script>
        </body>
</html>